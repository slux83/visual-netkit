#summary (Italian) Casi d'uso

= Introduzione =

Descrizione dei casi d'uso in modo strutturato.



----
= UC-Crea lab `[DONE: 60%]` =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* sistema avviato


*Post-condizioni:* è stato creato un nuovo lab ed e' stato associato come corrente


*Scenario Principale di Successo:* l’utente sceglie di creare un nuovo lab dal menu principale. L'utente inserisce vari parametri quali autori, nome, descrizione, website, versione ed email (non tutte obbligatorie). Il nuovo lab viene creato e associato come corrente.

*Variante:*
 * se e' gia' esistente un lab corrente, il sistema provvede a chiedere all'utente (eventualmente se necessario) il salvataggio dello stesso e la conferma a chiudere l'attuale laboratorio e a settare quello nuovo come nuovo lab corrente.



= UC-Modifica proprietà lab `[DONE: 100%]` =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* sistema avviato


*Pre-condizioni:* esiste un lab in memoria ed è il lab corrente


*Post-condizioni:* il lab è stato modificato in una delle sue proprietà


*Scenario Principale di Successo:* l'utente vuol modificare alcune proprietà del lab (quali nome, versione, data, descrizione, etc...). L'utente seleziona l'elemento "root" presente all'interno del Tree della dock Laboratory e il sistema dopo la selezione carica nella dock Property editor tutte le varie coppie (chiave, valore).
L'utente accede (doppio click) ad un valore desiderato e lo modifica. Una volta modificato il campo, il sistema provvede ad effettuare la modifica per il campo scelto.

----
= UC-Crea VM =

*Attore:* utente finale

*Contesto:* applicazione principale


*Pre-condizioni:* esiste un lab in memoria ed è il lab corrente


*Post-condizioni:* è stata creata una nuova VM ed è stata associata al lab corrente


*Scenario Principale di Successo:* L'utente seleziona dal menu' l'azione di "add virtual machine" che risulta mutuamente esclusiva rispetto alle altre azioni che governano la scena. L'utente clicca con il mouse su un'area della scena e il sistema mostra una form per l'acquisizione dei dati riguardanti la nuova macchina virtuale.
La form in particolare mostra campi per l'inserimento di dati quali: nome della macchina virtuale, servizi che si vuole avviare (e che caratterizzano il "tipo" della vm), nonche' l'AS di appartenenza con la possibilita' di crearne uno nuovo. L'utente clicca su OK, e il sistema crea tutte le varie instanze degli oggetti e mostra sulla scena la macchina virtuale (eventualmente all'interno del suo AS), disegnata in base ai servizi ad essa assiciati (ad esempio un router, un dns, uno switch, un semplice host, ecc...)



= UC-Modifica VM =

*Attore:* utente finale

*Contesto:* applicazione principale


*Pre-condizioni:* esiste una VM in memoria ed è la VM corrente


*Post-condizioni:* la VM è stata cambiata


*Scenario Principale di Successo:* l’utente modifica i parametri della VM.


= UC-Rinomina VM =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste una VM in memoria ed è la VM corrente


*Post-condizioni:* il nome della VM è stato cambiato


*Scenario Principale di Successo:* l’utente specifica il nuovo nome della VM


----
= UC-Crea Collision Domain =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste un lab in memoria ed è quello corrente

*Post-condizioni:* è stato creato un nuovo CD ed associato al lab


*Scenario Principale di Successo:* l’utente crea un nuovo CD associandogli nome, ip, netmask...
Note: non è necessario che siano già presenti VM o altri elementi nel lab



= UC-Modifica Collision Domain =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste un CD in memoria ed è quello corrente


*Post-condizioni:* il CD corrente è stato modificato


*Scenario Principale di Successo:* l’utente modifica le proprietà del CD corrente.



= UC-Rinomina Collision Domain =

*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste un CD in memoria ed è quello corrente


*Post-condizioni:* il CD corrente è stato rinominato


*Scenario Principale di Successo:* l’utente specifica il nuovo nome per il CD corrente.


----
= UC-Crea AS =


*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste una VM ed un CD in memoria


*Post-condizioni:* è stato creato un nuovo AS ed associato al lab


*Scenario Principale di Successo:* l’utente specifica le VM ed i CD che vuole raggruppare in un AS. Il gruppo viene creato ed associato al lab.
Note: gli elementi che prendono parte al gruppo (AS), ad es. VM o CD, devono avere una proprietà tipo “AS a cui appartengo”??



= UC-Modifica AS =


*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste un AS in memoria ed è quello corrente


*Post-condizioni:* è stato modificato l’AS


*Scenario Principale di Successo:* l’utente modifica le proprietà dell’AS



= UC-Rinomina AS =


*Attore:* utente finale

*Contesto:* applicazione principale

*Pre-condizioni:* esiste un AS in memoria ed è quello corrente


*Post-condizioni:* è stato rinominato l’AS


*Scenario Principale di Successo:* l’utente specifica il nuovo nome per l’AS